server:
  port: 9999
myOauthServer: 
  hostUrl: http://localhost
  logoutUrl: ${myOauthServer.hostUrl}/signout
  # logoutUrl: ${myOauthServer.hostUrl}/logout
  # directly to some1 oauth server /logout FAIL to logout
#security:
#  oauth2:
#    client:
#      client-id: acme
#      client-secret: acmesecret
#      access-token-uri: http://localhost:8080/oauth/token
#      user-authorization-uri: http://localhost:8080/oauth/authorize
#    resource:
#      user-info-uri: http://localhost:8080/me
security:
#  ignored: /favicon.ico,/scripts/**,/styles/**,/images/**
#  sessions: ALWAYS
  oauth2:
      sso:
        loginPath: /login
      client:
        clientId: ssoclient
        clientSecret: ssosecret
        accessTokenUri: ${myOauthServer.hostUrl}/oauth/token
        userAuthorizationUri: ${myOauthServer.hostUrl}/oauth/authorize
        clientAuthenticationScheme: form
      resource:
        jwt:
          keyUri: ${myOauthServer.hostUrl}/oauth/token_key
securityconfig:
  logoutsuccssurl: /signout2
  permitall: /rest/**,/bb**,/logout
  deniedpage: /deny
spring:
  thymeleaf:
    cache: false
    prefix: classpath:/templates/
    suffix: .html

# MANAGEMENT HTTP SERVER (ManagementServerProperties)
#management.context-path= # Management endpoint context-path. For instance `/actuator`
management:
    context-path=/actuator

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    com.example: DEBUG

    